{
  "name": "@asyncapi/java-spring-template",
  "version": "0.18.2",
  "description": "Java Spring template for AsyncAPI generator.",
  "keywords": [
    "asyncapi",
    "generator",
    "java",
    "spring",
    "template"
  ],
  "author": "Fran Mendez <fmvilas@gmail.com> (fmvilas.com)",
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/asyncapi/java-spring-template.git"
  },
  "bugs": {
    "url": "https://github.com/asyncapi/java-spring-template/issues"
  },
  "homepage": "https://github.com/asyncapi/java-spring-template#readme",
  "scripts": {
    "test": "echo \"No test specified yet\"",
    "release": "semantic-release",
    "get-version": "echo $npm_package_version"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@asyncapi/generator-filters": "^1.0.0",
    "@asyncapi/generator-hooks": "^0.1.0",
    "fs-extra": "^9.0.0",
    "lodash": "^4.17.15"
  },
  "devDependencies": {
    "@semantic-release/commit-analyzer": "^8.0.1",
    "@semantic-release/github": "^7.0.4",
    "@semantic-release/npm": "^7.0.3",
    "@semantic-release/release-notes-generator": "^9.0.1",
    "conventional-changelog-conventionalcommits": "^4.2.3",
    "semantic-release": "^17.0.4"
  },
  "release": {
    "branches": [
      "master"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "preset": "conventionalcommits"
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits"
        }
      ],
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "generator": {
    "supportedProtocols": [
      "kafka",
      "amqp",
      "mqtt"
    ],
    "nonRenderableFiles": [
      "**/*.jar"
    ],
    "parameters": {
      "inverseOperations": {
        "description": "Generate application that will publish messages to `publish` operation of channels and read messages from `subscribe` operation of channels. Literally this flag just swap `publish` and `subscribe` operations in channels.",
        "default": false,
        "required": false
      },
      "disableEqualsHashCode": {
        "description": "Disable generation of equals and hashCode methods for model classes.",
        "default": "false",
        "required": false
      },
      "listenerPollTimeout": {
        "description": "Only for Kafka. Timeout to use when polling the consumer.",
        "default": 3000,
        "required": false
      },
      "listenerConcurrency": {
        "description": "Only for Kafka. Number of threads to run in the listener containers.",
        "default": 3,
        "required": false
      },
      "asyncapiFileDir": {
        "description": "Parameter of @asyncapi/generator-hooks#createAsyncapiFile, allows to specify where original AsyncAPI file will be stored.",
        "default": "src/main/resources/api/",
        "required": false
      },
      "javaPackage": {
        "description": "The Java package of the generated classes. Alternatively you can set the specification extension info.x-java-package",
        "default": "com.asyncapi",
        "required": false
      }
    },
    "generator": ">=0.50.0 <2.0.0",
    "filters": [
      "@asyncapi/generator-filters"
    ],
    "hooks": {
      "@asyncapi/generator-hooks": "createAsyncapiFile"
    }
  }
}
