// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`template integration tests for additional formats of data types should generate DTO file with proper type classes 1`] = `
"package com.asyncapi.model;


import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.annotation.processing.Generated;
import java.util.List;
import java.util.Objects;


@Generated(value="com.asyncapi.generator.template.spring", date="AnyDate")
public class SongPayload {
    
    private @Valid java.util.UUID id;
    
    private @Valid String title;
    
    private @Valid String uri;
    
    private @Valid String email;
    
    private @Valid java.math.BigDecimal rating;
    

    

    /**
     * ID
     */
    @JsonProperty("id")
    public java.util.UUID getId() {
        return id;
    }

    public void setId(java.util.UUID id) {
        this.id = id;
    }
    

    /**
     * Title of a song
     */
    @JsonProperty("title")
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }
    

    /**
     * URI of a song
     */
    @JsonProperty("uri")
    public String getUri() {
        return uri;
    }

    public void setUri(String uri) {
        this.uri = uri;
    }
    

    /**
     * Author email
     */
    @JsonProperty("email")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }
    

    /**
     * Title rating
     */
    @JsonProperty("rating")
    public java.math.BigDecimal getRating() {
        return rating;
    }

    public void setRating(java.math.BigDecimal rating) {
        this.rating = rating;
    }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SongPayload songPayload = (SongPayload) o;
        return 
            Objects.equals(this.id, songPayload.id) &&
            Objects.equals(this.title, songPayload.title) &&
            Objects.equals(this.uri, songPayload.uri) &&
            Objects.equals(this.email, songPayload.email) &&
            Objects.equals(this.rating, songPayload.rating);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, title, uri, email, rating);
    }

    @Override
    public String toString() {
        return "class SongPayload {\\n" +
        
                "    id: " + toIndentedString(id) + "\\n" +
                "    title: " + toIndentedString(title) + "\\n" +
                "    uri: " + toIndentedString(uri) + "\\n" +
                "    email: " + toIndentedString(email) + "\\n" +
                "    rating: " + toIndentedString(rating) + "\\n" +
                "}";
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
           return "null";
        }
        return o.toString().replace("\\n", "\\n    ");
    }
}"
`;
